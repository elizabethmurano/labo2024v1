# Arbol elemental con libreria  rpart
# Debe tener instaladas las librerias  data.table  ,  rpart  y  rpart.plot
install.packages(c("data.table", "rpart", "rpart.plot"))
# cargo las librerias que necesito
require("data.table")
require("rpart")
require("rpart.plot")
# Aqui se debe poner la carpeta de la materia de SU computadora local
setwd("C:/Users/Elisabeth/Desktop/MAESTRIA_AUSTRAL/Labo_I/labo2024v1") # Establezco el Working Directory
# cargo el dataset
dataset <- fread("C:/Users/Elisabeth/Desktop/MAESTRIA_AUSTRAL/Labo_I/datasets/dataset_pequeno.csv")
dtrain <- dataset[foto_mes == 202107] # defino donde voy a entrenar
dapply <- dataset[foto_mes == 202109] # defino donde voy a aplicar el modelo
modelo <- rpart(
formula = "clase_ternaria ~ .",
data = dtrain, # los datos donde voy a entrenar
xval = 0,
cp = -0.3, # esto significa no limitar la complejidad de los splits
minsplit = 800, # minima cantidad de registros para que se haga el split
minbucket = 100, # tamaño minimo de una hoja [minsplit >= 2* minbucket]
maxdepth = 6
) # profundidad maxima del arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 0
)
# aplico el modelo a los datos nuevos
prediccion <- predict(
object = modelo,
newdata = dapply,
type = "prob"
)
dapply[, prob_baja2 := prediccion[, "BAJA+2"]]
# solo le envio estimulo a los registros
#  con probabilidad de BAJA+2 mayor  a  1/40
dapply[, Predicted := as.numeric(prob_baja2 > 1 / 40)]
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 5
)
# grafico el arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 2
)
# grafico el arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 0,15
)
# grafico el arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 0.15
)
# grafico el arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 1
)
# grafico el arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 1
)
# grafico el arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 0
)
# grafico el arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 0
)
# grafico el arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 0
)
# Iniciar un dispositivo gráfico (por ejemplo, png o pdf) con un tamaño personalizado
png("arbol.png", width = 10, height = 10)  # Ajustar el tamaño según sea necesario
# grafico el arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 0
)
# grafico el arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 0
)
modelo <- rpart(
formula = "clase_ternaria ~ .",
data = dtrain, # los datos donde voy a entrenar
xval = 0,
cp = -0.3, # esto significa no limitar la complejidad de los splits
minsplit = 800, # minima cantidad de registros para que se haga el split
minbucket = 100, # tamaño minimo de una hoja [minsplit >= 2* minbucket]
maxdepth = 8
) # profundidad maxima del arbol
# grafico el arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 0
)
View(dataset)
dataset[, clase_ternaria := NULL]
View(dataset)
dataset <- fread("C:/Users/Elisabeth/Desktop/MAESTRIA_AUSTRAL/Labo_I/datasets/dataset_pequeno.csv")
View(dataset)
install.packages(c("data.table", "rpart", "rpart.plot"))
install.packages(c("data.table", "rpart", "rpart.plot"))
install.packages(c("data.table", "rpart", "rpart.plot"))
install.packages(c("data.table", "rpart", "rpart.plot"))
require("data.table")
require("rpart")
require("rpart.plot")
setwd("C:/Users/Elisabeth/Desktop/MAESTRIA_AUSTRAL/Labo_I/labo2024v1") # Establezco el Working Directory
# cargo el dataset
dataset <- fread("C:/Users/Elisabeth/Desktop/MAESTRIA_AUSTRAL/Labo_I/datasets/dataset_pequeno.csv")
View(dataset)
dataset<- dataset[clase_ternaria == "BAJA+2",clase_binaria1:="pos"]
dataset<- dataset[clase_ternaria != "BAJA+2",clase_binaria1:="neg"]
View(dataset)
#elimino clase ternaria para que solo trabaje con clase binaria
dataset[, clase_ternaria := NULL]
dtrain <- dataset[foto_mes == 202107] # defino donde voy a entrenar
dapply <- dataset[foto_mes == 202109] # defino donde voy a aplicar el modelo
View(dataset)
View(dataset)
# quiero predecir clase_ternaria a partir de el resto de las variables
modelo <- rpart(
formula = "clase_binaria1 ~ .",
data = dtrain, # los datos donde voy a entrenar
xval = 0,
cp = -0.5, # esto significa no limitar la complejidad de los splits
minsplit = 600, # minima cantidad de registros para que se haga el split
minbucket = 150, # tamaño minimo de una hoja [minsplit >= 2* minbucket]
maxdepth = 6
) # profundidad maxima del arbol
# grafico el arbol
prp(modelo,
extra = 101, digits = -5,
branch = 1, type = 4, varlen = 0, faclen = 0
)
# aplico el modelo a los datos nuevos
prediccion <- predict(
object = modelo,
newdata = dapply,
type = "prob"
)
dapply[, prob_pos := prediccion[, "pos"]]
# solo le envio estimulo a los registros
#  con probabilidad de BAJA+2 mayor  a  1/40
dapply[, Predicted := as.numeric(prob_pos > 1 / 40)]
